{"version":3,"sources":["components/AddTodo/AddTodo.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoApp","state","task","handleSubmit","event","preventDefault","_this","props","addTodo","setState","handleOnChange","value","target","_this2","this","react_default","a","createElement","className","onSubmit","placeholder","onChange","Component","TodoItem","editingInput","handleClickCheckBox","_ref","id","Number","length","changeCompleted","handleClickButtonDestroy","_ref2","idInput","parentNode","children","idTodo","removeTodos","handleLableDoubleClick","_ref3","closest","classList","add","innerText","handleBlurNewInput","idMainInput","parentLi","editTask","remove","handlePressKeyNewInput","key","keyCode","handleOnChangeNewInput","_this$props$item","item","title","completed","type","concat","checked","htmlFor","onClick","onDoubleClick","onKeyDown","onBlur","autoFocus","TodoList","filter","handleClickButtonClear","_this$props","items","map","handleFilters","getAttribute","slice","createFilteredTodos","list","switcher","Object","toConsumableArray","_this$props2","setCompletedAll","filteredTodos","Fragment","style","display","every","components_TodoItem_TodoItem","href","classNames","selected","some","App","listTodos","localStorage","getItem","JSON","parse","prevState","sort","b","setItem","stringify","ids","includes","_objectSpread","stateCompleted","newTitle","AddTodo","components_TodoList_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e9175be.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends Component {\n  state = {\n    task: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { task } = this.state;\n\n    if (task) {\n      this.props.addTodo(task);\n      this.setState({ task: '' });\n    }\n  }\n\n  handleOnChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ task: value });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.task}\n            onChange={this.handleOnChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","/* eslint-disable jsx-a11y/no-autofocus */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n  state = {\n    editingInput: '',\n  }\n\n  handleClickCheckBox = ({ target }) => {\n    const id = Number(target.id[target.id.length - 1]);\n    const { changeCompleted } = this.props;\n\n    changeCompleted(id);\n  }\n\n  handleClickButtonDestroy = ({ target }) => {\n    const idInput = target.parentNode.children[0].id;\n    const idTodo = Number(idInput[idInput.length - 1]);\n    const { removeTodos } = this.props;\n\n    removeTodos([idTodo]);\n  }\n\n  handleLableDoubleClick = ({ target }) => {\n    const parentLi = target.closest('li');\n\n    parentLi.classList.add('editing');\n    this.setState({ editingInput: target.innerText });\n  }\n\n  handleBlurNewInput = (event) => {\n    const { value } = event.target;\n    const idMainInput = event.target.parentNode.children[0].children[0].id;\n    const idTodo = Number(idMainInput[idMainInput.length - 1]);\n    const parentLi = event.target.parentNode;\n\n    this.props.editTask(idTodo, value);\n    parentLi.classList.remove('editing');\n    this.setState({ editingInput: '' });\n  }\n\n  handlePressKeyNewInput = (event) => {\n    const { key } = event;\n    const { value } = event.target;\n    const idMainInput = event.target.parentNode.children[0].children[0].id;\n    const idTodo = Number(idMainInput[idMainInput.length - 1]);\n    const parentLi = event.target.parentNode;\n\n    if (key === 'Enter') {\n      this.props.editTask(idTodo, value);\n      parentLi.classList.remove('editing');\n      this.setState({ editingInput: '' });\n    } else if (event.keyCode === 27) {\n      parentLi.classList.remove('editing');\n      this.setState({ editingInput: '' });\n    }\n  }\n\n  handleOnChangeNewInput = (event) => {\n    this.setState({\n      editingInput: event.target.value,\n    });\n  }\n\n  render() {\n    const { id, title, completed } = this.props.item;\n\n    return (\n      <li className={completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${id}`}\n            checked={completed}\n            onChange={this.handleClickCheckBox}\n          />\n          <label\n            htmlFor={`todo-${id}`}\n            onClick={event => event.preventDefault()}\n            onDoubleClick={this.handleLableDoubleClick}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={this.handleClickButtonDestroy}\n          />\n        </div>\n        {this.state.editingInput\n          ? (\n            <input\n              type=\"text\"\n              className=\"edit\"\n              value={this.state.editingInput}\n              onChange={this.handleOnChangeNewInput}\n              onKeyDown={this.handlePressKeyNewInput}\n              onBlur={this.handleBlurNewInput}\n              autoFocus\n            />\n          )\n          : null\n        }\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  removeTodos: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nclass TodoList extends Component {\n  state = {\n    filter: 'all',\n  }\n\n  handleClickButtonClear = () => {\n    const { items, removeTodos } = this.props;\n\n    removeTodos(items.filter(item => item.completed).map(item => item.id));\n  }\n\n  handleFilters = ({ target }) => {\n    const filter = target.getAttribute('href').slice(2) || 'all';\n\n    this.setState({\n      filter,\n    });\n  }\n\n  createFilteredTodos = (list, switcher) => {\n    switch (switcher) {\n      case 'completed':\n        return [...list].filter(item => item.completed);\n      case 'active':\n        return [...list].filter(item => !item.completed);\n      default:\n        return [...list];\n    }\n  };\n\n  render() {\n    const {\n      items,\n      changeCompleted,\n      removeTodos,\n      editTask,\n      setCompletedAll,\n    } = this.props;\n    const { filter } = this.state;\n    const filteredTodos = this.createFilteredTodos(items, filter);\n\n    return (\n      <>\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={filteredTodos.every(item => item.completed)}\n            onChange={event => setCompletedAll(event.target.checked)}\n          />\n          {filteredTodos.length\n            ? <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            : null\n          }\n\n          <ul className=\"todo-list\">\n            {filteredTodos\n              .map(item => (\n                <TodoItem\n                  item={item}\n                  key={item.id}\n                  changeCompleted={changeCompleted}\n                  removeTodos={removeTodos}\n                  editTask={editTask}\n                />\n              ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${items.filter(item => !item.completed).length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={classNames({ selected: filter === 'all' })}\n                onClick={this.handleFilters}\n              >\n                    All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={classNames({ selected: filter === 'active' })}\n                onClick={this.handleFilters}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={classNames({ selected: filter === 'completed' })}\n                onClick={this.handleFilters}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={items.some(item => item.completed)\n              ? ({ display: 'block' })\n              : ({ display: 'none' })}\n            onClick={this.handleClickButtonClear}\n          />\n        </footer>\n      </>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  removeTodos: PropTypes.func.isRequired,\n  setCompletedAll: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport AddTodo from './components/AddTodo/AddTodo';\nimport TodoList from './components/TodoList/TodoList';\n\nclass App extends Component {\n  state = {\n    listTodos: localStorage.getItem('todos')\n      ? [...JSON.parse(localStorage.getItem('todos'))]\n      : [],\n  }\n\n  addTodo = (title) => {\n    this.setState((prevState) => {\n      const listTodos = [...prevState.listTodos,\n        {\n          id: prevState.listTodos\n            .map(item => item.id)\n            .sort((a, b) => a - b)[prevState.listTodos.length - 1] + 1 || 0,\n          title,\n          completed: false,\n        },\n      ];\n\n      localStorage.setItem('todos', JSON.stringify(listTodos));\n\n      return ({\n        listTodos,\n      });\n    });\n  }\n\n  removeTodos = (ids) => {\n    this.setState((prevState) => {\n      const listTodos = [...prevState.listTodos]\n        .filter(item => !ids.includes(item.id));\n\n      localStorage.setItem('todos', JSON.stringify(listTodos));\n\n      return ({\n        listTodos,\n      });\n    });\n  }\n\n  changeCompleted = (id) => {\n    this.setState((prevState) => {\n      const listTodos = [...prevState.listTodos]\n        .map(item => (item.id === id\n          ? { ...item, completed: !item.completed }\n          : { ...item }));\n\n      localStorage.setItem('todos', JSON.stringify(listTodos));\n\n      return ({\n        listTodos,\n      });\n    });\n  }\n\n  setCompletedAll = (stateCompleted) => {\n    this.setState((prevState) => {\n      const listTodos = [...prevState.listTodos]\n        .map(item => ({ ...item, completed: stateCompleted }));\n\n      localStorage.setItem('todos', JSON.stringify(listTodos));\n\n      return ({\n        listTodos,\n      });\n    });\n  }\n\n  editTask = (id, newTitle) => {\n    if (!newTitle) {\n      this.removeTodos([id]);\n    } else {\n      this.setState((prevState) => {\n        const listTodos = [...prevState.listTodos]\n          .map(item => (item.id === id\n            ? { ...item, title: newTitle }\n            : { ...item }\n          ));\n\n        localStorage.setItem('todos', JSON.stringify(listTodos));\n\n        return ({\n          listTodos,\n        });\n      });\n    }\n  }\n\n  createFilteredTodos = (list, switcher) => {\n    switch (switcher) {\n      case 'completed':\n        return [...list].filter(item => item.completed);\n      case 'active':\n        return [...list].filter(item => !item.completed);\n      default:\n        return [...list];\n    }\n  };\n\n  render() {\n    const { listTodos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <AddTodo addTodo={this.addTodo} />\n\n        <TodoList\n          items={listTodos}\n          changeCompleted={this.changeCompleted}\n          removeTodos={this.removeTodos}\n          setCompletedAll={this.setCompletedAll}\n          editTask={this.editTask}\n          createFilteredTodos={this.createFilteredTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}